# srxboys 2019-4-12


# 一、ESLint javascript代码检测工具 (官网：https://cn.eslint.org)
-------------------------------------------------------------------------------------------------------
   代码检查是一种静态的分析，常用于寻找有问题的模式或者代码，并且不依赖于具体的编码风格。
对大多数编程语言来说都会有代码检查，一般来说编译程序会内置检查工具。

   JavaScript 是一个动态的弱类型语言，在开发中比较容易出错。

-------------------------------------------------------------------------------------------------------

# 而、作用： 
    1、静态分析、检查
    2、编码风格(定义规则)
    3、支持代码格式化(代码规范)

-------------------------------------------------------------------------------------------------------

# 三、eslint配置视频教程
  https://learn.handlebarlabs.com/courses/react-native-basics-build-a-currency-converter/lectures/2643145

# 四、eslint规则使用(blog)
  官方：https://cn.eslint.org/docs/rules/
  解释说明(注意这个可能不是最新的)：https://www.jianshu.com/p/f8d2ef372adf

-------------------------------------------------------------------------------------------------------
# 五、eslint 安装
npm install eslint -g
eslint --init   //会有一些引导方式安装，每个版本都不同，不再说明，可以《边翻译，边安装》，看`三 视频教程的比较详细`



# 六、eslint 针对 React-Native 需要的库：
npm install --save-dev eslint-config-airbnb
npm install --save-dev eslint-plugin-import
npm install --save-dev eslint-plugin-react
npm install --save-dev babel-eslint
npm install --save-dev eslint-plugin-jsx-a11y
npm install --save-dev prettier
npm install --save-dev prettier-eslint

-------------------------------------------------------------------------------------------------------

# 七、运行检查:
npm run lint

# 八、修复写法错误，删除无用的属性等等(危险操作):
npm run lint:flx
